{"version":3,"file":"UNSAFE_useTabbableMode.js","sources":["../../../src/hooks/UNSAFE_useTabbableMode/TabbableModeContext.tsx","../../../src/hooks/UNSAFE_useTabbableMode/useTabbableMode.ts"],"sourcesContent":["/**\n * Context for Tabbable Mode Consumer and Provider\n */\n\nimport { createContext } from 'preact';\n\n/**\n * Context props for Tabbable Mode\n */\ntype TabbableModeContextProps = {\n  /**\n   * State of Tabbable mode\n   * @default true\n   */\n  isTabbable: boolean;\n};\n\nconst initialContext: TabbableModeContextProps = {\n  isTabbable: true\n};\n\nconst TabbableModeContext = createContext<TabbableModeContextProps>(initialContext);\n\nexport { TabbableModeContext };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useContext } from 'preact/hooks';\nimport { TabbableModeContext } from './TabbableModeContext';\n\n/**\n * Utility hook for consuming the TabbableModeContext\n */\nfunction useTabbableMode() {\n  const { isTabbable } = useContext(TabbableModeContext);\n  const tabbableModeProps = {\n    tabIndex: isTabbable === false ? -1 : 0\n  };\n  return {\n    isTabbable,\n    tabbableModeProps\n  };\n}\n\nexport { useTabbableMode };\n"],"names":["TabbableModeContext","createContext","isTabbable","useContext","tabbableModeProps","tabIndex"],"mappings":"wEAiBA,MAIMA,EAAsBC,EAAaA,cAJQ,CAC/CC,YAAY,8CCJd,WACE,MAAMA,WAAEA,GAAeC,EAAUA,WAACH,GAIlC,MAAO,CACLE,WAAAA,EACAE,kBALwB,CACxBC,UAAyB,IAAfH,GAAwB,EAAI"}