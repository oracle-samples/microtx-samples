{
  "name": "collapsible",
  "version": "1.0.0",
  "jetVersion": "^14.0.1",
  "type": "composite",
  "pack": "oj-c",
  "implements": [
    "CCollapsibleElement"
  ],
  "description": "A collapsible displays a header that can be expanded to show its content.",
  "displayName": "Collapsible",
  "help": "oj-c.Collapsible.html",
  "main": "oj-c/collapsible",
  "extension": {
    "vbdt": {
      "module": "oj-c/collapsible"
    },
    "oracle": {
      "icon": "oj-ux-ico-collapsible",
      "uxSpecs": [
        "collapsible"
      ]
    }
  },
  "propertyLayout": [
    {
      "propertyGroup": "common",
      "items": [
        "disabled",
        "expanded",
        "iconPosition",
        "variant"
      ]
    }
  ],
  "since": "14.0.0",
  "slots": {
    "": {
      "description": "The default slot is the content of the collapsible. The oj-c-collapsible element accepts plain text or DOM nodes as children for the default slot.",
      "displayName": "default",
      "help": "#Default"
    },
    "header": {
      "description": "The header slot is the collapsible's header. If not specified, the header contains only an open/close icon. Note that the header text is required for JET collapsible for accessibility purposes.",
      "displayName": "Header",
      "help": "#header"
    }
  },
  "properties": {
    "disabled": {
      "type": "boolean",
      "description": "Disables the collapsible if set to true",
      "displayName": "Disabled",
      "help": "#disabled"
    },
    "expanded": {
      "type": "boolean",
      "description": "Specifies if the content is expanded.",
      "displayName": "Expanded",
      "help": "#expanded",
      "extension": {
        "webelement": {
          "exceptionStatus": [
            {
              "type": "unsupported"
            }
          ]
        }
      },
      "writeback": true
    },
    "iconPosition": {
      "type": "string",
      "description": "Controls placement of the icon in the header.",
      "displayName": "iconPosition",
      "help": "#iconPosition",
      "enumValues": [
        "start",
        "end"
      ]
    },
    "variant": {
      "type": "string",
      "description": "Controls display of the optional divider below the header.",
      "displayName": "variant",
      "help": "#variant",
      "enumValues": [
        "basic",
        "horizontal-rule"
      ]
    }
  },
  "events": {
    "ojBeforeCollapse": {
      "cancelable": true,
      "description": "Triggered immediately before the collapsible is collapsed.",
      "help": "#event:beforeCollapse",
      "detail": {
        "accept": {
          "description": "This method can be called with an application-created Promise to cancel this event asynchronously.  The Promise should be resolved or rejected to accept or cancel the event, respectively.",
          "type": "function"
        },
        "target": {
          "type": "EventTarget|null"
        }
      }
    },
    "ojBeforeExpand": {
      "cancelable": true,
      "description": "Triggered immediately before the collapsible is expanded.",
      "help": "#event:beforeExpand",
      "detail": {
        "accept": {
          "description": "This method can be called with an application-created Promise to cancel this event asynchronously.  The Promise should be resolved or rejected to accept or cancel the event, respectively.",
          "type": "function"
        },
        "target": {
          "type": "EventTarget|null"
        }
      }
    },
    "ojCollapse": {
      "description": "Triggered after the collapsible has been collapsed.",
      "help": "#event:collapse",
      "detail": {
        "target": {
          "type": "EventTarget|null"
        }
      }
    },
    "ojExpand": {
      "description": "Triggered after the collapsible has been expanded (after animation completes).",
      "help": "#event:expand",
      "detail": {
        "target": {
          "type": "EventTarget|null"
        }
      }
    }
  },
  "methods": {
    "setProperty": {
      "description": "Sets a property or a single subproperty for complex properties and notifies the component of the change, triggering a corresponding event.",
      "help": "#setProperty",
      "params": [
        {
          "name": "property",
          "description": "The property name to set. Supports dot notation for subproperty access.",
          "type": "string"
        },
        {
          "name": "value",
          "description": "The new value to set the property to.",
          "type": "any"
        }
      ],
      "return": "void"
    },
    "getProperty": {
      "description": "Retrieves the value of a property or a subproperty.",
      "help": "#getProperty",
      "params": [
        {
          "name": "property",
          "description": "The property name to get. Supports dot notation for subproperty access.",
          "type": "string"
        }
      ],
      "return": "any"
    },
    "setProperties": {
      "description": "Performs a batch set of properties.",
      "help": "#setProperties",
      "params": [
        {
          "name": "properties",
          "description": "An object containing the property and value pairs to set.",
          "type": "object"
        }
      ],
      "return": "void"
    }
  }
}