{"version":3,"file":"ListItemTextLayout-ad386670.js","sources":["../../src/UNSAFE_ListItemLayout/ListItemLayout.tsx","../../src/UNSAFE_ListItemLayout/ListItemText.tsx","../../src/UNSAFE_ListItemLayout/ListItemTextLayout.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChildren, JSX } from 'preact';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { Grid } from '../UNSAFE_Grid';\nimport { classNames } from '../utils/UNSAFE_classNames';\n\ntype IntrinsicProps = Pick<JSX.HTMLAttributes<HTMLDivElement>, 'children'>;\ntype Props = {\n  children?: ComponentChildren;\n  /**\n   * The centermost element that should display more important data.\n   */\n  primary?: ComponentChildren;\n  /**\n   * Render Selector component in the leftmost column of the grid.\n   */\n  selector?: ComponentChildren;\n  /**\n   * Visual element to the left of the primary section.\n   * Supports image, avatar, badge, initials, or icon.\n   */\n  leading?: ComponentChildren;\n  /**\n   * A section that is rendered above the primary line.\n   */\n  overline?: ComponentChildren;\n  /**\n   * A section below the primary line.\n   */\n  secondary?: ComponentChildren;\n  /**\n   * Another section below secondary.\n   */\n  tertiary?: ComponentChildren;\n  /**\n   * Provides information about other data.\n   * Some examples of basic metadata are author, date created, date modified, file size, abbreviations, etc.\n   */\n  metadata?: ComponentChildren;\n  /**\n   * Visual element to the right of the primary section and metadata.\n   * Example components are image, avatar, badge, initials, or icon.\n   */\n  trailing?: ComponentChildren;\n  /**\n   * The action prop displays either one primary action or one or more secondary actions.\n   * A common example is using Toolbar.\n   */\n  action?: ComponentChildren;\n  /**\n   * Additional section separated with a space between itself and tertiary.\n   */\n  quaternary?: ComponentChildren;\n  /**\n   * Navigation should normally be used for linking away from the layout.\n   */\n  navigation?: ComponentChildren;\n} & IntrinsicProps;\n\nconst childrenStyles = cssProps`${{\n  /* @ts-ignore */\n  '& > *': {\n    marginTop: '0 !important',\n    marginBottom: '0 !important',\n    marginLeft: '0 !important',\n    marginRight: '0 !important'\n  }\n}}`;\n\n// TODO: revisit idea of negative margin when selector has a proper API for handling spacing\n// Jira: JET-54543\n// negative margin added to selector\nconst selectorStyles = cssProps`${{\n  alignSelf: 'center',\n  margin: '-0.875rem -0.875rem'\n}}`;\n\n// most content will be vertically centered\nconst centerVerticalStyles = cssProps`${{\n  alignSelf: 'center',\n  minWidth: 0\n}}`;\n\n// extra spacing is needed between meta, trailing, and action components\nconst leftPaddingStyles = cssProps`${{\n  paddingInlineStart: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-4x)'\n}}`;\n\n// the central text area displays overline, primary, secondary, and tertiary in a column\nconst flexColumnStyles = cssProps`${{\n  display: 'flex',\n  flexDirection: 'column'\n}}`;\n\n// \"extra\" components in row 1 and the link in row 2 are justified on the righthand side of the list item layout\nconst flexRowStyles = cssProps`${{\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'right',\n  alignSelf: 'center'\n}}`;\n\nconst rightJustifyStyles = cssProps`${{\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'right'\n}}`;\n\nconst rowAlignStyles = cssProps`${{\n  alignSelf: 'end'\n}}`;\n\nexport function ListItemLayout({\n  children,\n  selector,\n  leading,\n  primary,\n  secondary,\n  tertiary,\n  overline,\n  metadata,\n  trailing,\n  action,\n  quaternary,\n  navigation\n}: Props) {\n  // generate grid skeleton, adding cells based on which props are defined\n  const { columnsTemplate, firstCell, secondCell, lastCell, hasSecondRow } = getColumnsTemplate(\n    selector,\n    leading,\n    metadata,\n    trailing,\n    action,\n    quaternary,\n    navigation\n  );\n\n  // if ListItemLayout component has a child (ListItemTextLayout) then render that instead of individual props\n  const textArea = children ? (\n    <div className={childrenStyles}>{children}</div>\n  ) : (\n    <div className={flexColumnStyles}>\n      <div>{overline}</div>\n      <div>{primary}</div>\n      <div>{secondary}</div>\n      <div>{tertiary}</div>\n    </div>\n  );\n\n  // a second row is needed when quaternary or navigation are defined\n  const secondRow = hasSecondRow\n    ? [\n        firstCell && <span> </span>,\n        secondCell && <span> </span>,\n        <div className={rowAlignStyles}>{quaternary}</div>,\n        lastCell && <div className={rightJustifyStyles}>{navigation}</div>\n      ]\n    : null;\n\n  return (\n    <Grid gap=\"4x\" gridTemplateColumns={columnsTemplate}>\n      {firstCell}\n      {secondCell}\n      <div className={centerVerticalStyles}>{textArea}</div>\n      {lastCell}\n      {secondRow}\n    </Grid>\n  );\n}\n\nfunction getColumnsTemplate(\n  selector: ComponentChildren,\n  leading: ComponentChildren,\n  metadata: ComponentChildren,\n  trailing: ComponentChildren,\n  action: ComponentChildren,\n  quaternary: ComponentChildren,\n  navigation: ComponentChildren\n) {\n  const columnsTemplateBuilder = [];\n\n  let firstCell = null;\n  if (selector) {\n    columnsTemplateBuilder.push('auto');\n    firstCell = <div className={selectorStyles}>{selector}</div>;\n  }\n\n  let secondCell = null;\n  if (leading) {\n    columnsTemplateBuilder.push('auto');\n    secondCell = <div className={centerVerticalStyles}>{leading}</div>;\n  }\n\n  columnsTemplateBuilder.push('1fr'); // Text area always gets 1 full fraction of allotted space\n\n  let lastCell = null;\n  if (metadata || trailing || action || navigation) {\n    columnsTemplateBuilder.push('auto');\n    lastCell = (\n      <div className={flexRowStyles}>\n        <div className={classNames([centerVerticalStyles, metadata ? leftPaddingStyles : ''])}>\n          {metadata}\n        </div>\n        <div className={classNames([centerVerticalStyles, trailing ? leftPaddingStyles : ''])}>\n          {trailing}\n        </div>\n        <div className={classNames([centerVerticalStyles, action ? leftPaddingStyles : ''])}>\n          {action}\n        </div>\n      </div>\n    );\n  }\n\n  const columnsTemplate = columnsTemplateBuilder.join(' ');\n  const hasSecondRow = quaternary || navigation ? true : false;\n\n  return { columnsTemplate, firstCell, secondCell, lastCell, hasSecondRow };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { JSX, ComponentProps } from 'preact';\nimport { Text } from '../UNSAFE_Text';\nimport { useTabbableMode } from '../hooks/UNSAFE_useTabbableMode';\n\ntype IntrinsicProps = Pick<JSX.HTMLAttributes<HTMLDivElement>, 'children'>;\ntype Props = {\n  children?: string;\n  /**\n   * Name of the text slot which determines styling\n   */\n  variant: 'primary' | 'secondary' | 'tertiary' | 'quaternary' | 'overline' | 'metadata';\n} & IntrinsicProps;\n\nconst textVariants: Record<Props['variant'], ComponentProps<typeof Text>['variant']> = {\n  primary: 'primary',\n  secondary: 'primary',\n  tertiary: 'secondary',\n  quaternary: 'secondary',\n  overline: 'secondary',\n  metadata: 'secondary'\n};\n\nconst textSizes: Record<Props['variant'], ComponentProps<typeof Text>['size']> = {\n  primary: 'md',\n  secondary: 'sm',\n  tertiary: 'xs',\n  quaternary: 'sm',\n  overline: 'xs',\n  metadata: 'sm'\n};\n\nconst textLineClamps: Record<Props['variant'], ComponentProps<typeof Text>['lineClamp']> = {\n  primary: undefined,\n  secondary: 2,\n  tertiary: 2,\n  quaternary: 2,\n  overline: 1,\n  metadata: 1\n};\n\nexport function ListItemText({ children, variant }: Props) {\n  const { isTabbable } = useTabbableMode();\n\n  const textContent = (\n    <Text\n      variant={textVariants[variant]}\n      size={textSizes[variant]}\n      lineClamp={textLineClamps[variant]}>\n      {children}\n    </Text>\n  );\n\n  return isTabbable ? <div tabIndex={0}>{textContent}</div> : textContent;\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { JSX } from 'preact';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { ListItemText } from './ListItemText';\n\ntype IntrinsicProps = JSX.HTMLAttributes<HTMLDivElement>;\ntype Props = {\n  /**\n   * The primary prop takes a simple string that will be formatted and placed in the center of the text area.\n   */\n  primary?: string;\n  /**\n   * The secondary prop takes a simple string that will be formatted and placed below the primary text.\n   */\n  secondary?: string;\n  /**\n   * The tertiary prop takes a simple string that will be formatted and placed below the secondary text.\n   */\n  tertiary?: string;\n  /**\n   * The overline prop takes a simple string that will be formatted and placed above the primary text.\n   */\n  overline?: string;\n} & IntrinsicProps;\n\nconst flexColumnStyles = cssProps`${{\n  display: 'flex',\n  flexDirection: 'column'\n}}`;\n\nexport function ListItemTextLayout({ primary, secondary, tertiary, overline }: Props) {\n  return (\n    <div className={flexColumnStyles}>\n      <ListItemText variant=\"overline\">{overline}</ListItemText>\n      <ListItemText variant=\"primary\">{primary}</ListItemText>\n      <ListItemText variant=\"secondary\">{secondary}</ListItemText>\n      <ListItemText variant=\"tertiary\">{tertiary}</ListItemText>\n    </div>\n  );\n}\n"],"names":["selectorStyles","centerVerticalStyles","leftPaddingStyles","flexRowStyles","textVariants","primary","secondary","tertiary","quaternary","overline","metadata","textSizes","textLineClamps","undefined","ListItemText","children","variant","isTabbable","useTabbableMode","textContent","_jsx","Text","Object","assign","size","lineClamp","tabIndex","selector","leading","trailing","action","navigation","columnsTemplate","firstCell","secondCell","lastCell","hasSecondRow","columnsTemplateBuilder","push","_jsxs","jsxs","className","jsx","classNames","getColumnsTemplate","textArea","Grid","gap","gridTemplateColumns","secondRow"],"mappings":"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"}