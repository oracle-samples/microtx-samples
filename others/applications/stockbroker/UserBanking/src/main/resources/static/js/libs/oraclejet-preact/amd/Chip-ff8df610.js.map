{"version":3,"file":"Chip-ff8df610.js","sources":["../../src/UNSAFE_Chip/Chip.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { useActionable } from '../hooks/UNSAFE_useActionable';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { useCallback } from 'preact/hooks';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { useTabbableMode } from '../hooks/UNSAFE_useTabbableMode';\n\nconst cursorandFocusStyle = cssProps`${{\n  cursor: 'var( --oj-c-PRIVATE-DO-NOT-USE-core-cursor-clickable)',\n  '&:focus-visible': {\n    outlineColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-focus-border-color)',\n    outlineStyle: 'dotted',\n    outlineWidth: '1px',\n    outlineOffset: '1px'\n  }\n}}`;\n\nconst styles = {\n  base: cssProps`${{\n    backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-chip-bg-color)',\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-chip-text-color)',\n    display: 'inline-block',\n    paddingTop: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-2x)',\n    paddingRight: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-2x)',\n    paddingBottom: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-2x)',\n    paddingLeft: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-2x)',\n    boxSizing: 'border-box',\n    borderTopLeftRadius: 'var(--oj-c-PRIVATE-DO-NOT-USE-chip-border-radius)',\n    borderTopRightRadius: 'var(--oj-c-PRIVATE-DO-NOT-USE-chip-border-radius)',\n    borderBottomRightRadius: 'var(--oj-c-PRIVATE-DO-NOT-USE-chip-border-radius)',\n    borderBottomLeftRadius: 'var(--oj-c-PRIVATE-DO-NOT-USE-chip-border-radius)',\n    height: '2rem',\n    minWidth: '2rem',\n    lineHeight: 'var(--oj-c-PRIVATE-DO-NOT-USE-chip-line-height)',\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-chip-font-size)',\n    fontWeight: 'var(--oj-c-PRIVATE-DO-NOT-USE-chip-font-weight)',\n    overflowX: 'hidden',\n    overflowY: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    textAlign: 'center'\n  }}`,\n  disabled: cssProps`${{\n    '--oj-c-PRIVATE-DO-NOT-USE-chip-bg-color':\n      'var(--oj-c-PRIVATE-DO-NOT-USE-core-color-disabled-1)',\n    '--oj-c-PRIVATE-DO-NOT-USE-chip-text-color':\n      'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-disabled)'\n  }}`,\n  info: cssProps`${{\n    '--oj-c-PRIVATE-DO-NOT-USE-chip-bg-color': 'var(--oj-c-PRIVATE-DO-NOT-USE-core-info-1)',\n    '--oj-c-PRIVATE-DO-NOT-USE-chip-text-color': 'var(--oj-c-PRIVATE-DO-NOT-USE-core-info-contrast)'\n  }}`,\n  infoSubtle: cssProps`${{\n    '--oj-c-PRIVATE-DO-NOT-USE-chip-bg-color':\n      'var(--oj-c-PRIVATE-DO-NOT-USE-core-info-secondary-1)',\n    '--oj-c-PRIVATE-DO-NOT-USE-chip-text-color':\n      'var(--oj-c-PRIVATE-DO-NOT-USE-core-info-secondary-contrast)'\n  }}`,\n  infoSubtleLighter: cssProps`${{\n    '--oj-c-PRIVATE-DO-NOT-USE-chip-bg-color':\n      'var(--oj-c-PRIVATE-DO-NOT-USE-core-info-secondary-3)',\n    '--oj-c-PRIVATE-DO-NOT-USE-chip-text-color':\n      'var(--oj-c-PRIVATE-DO-NOT-USE-core-info-secondary-contrast)'\n  }}`,\n\n  childrenMargins: cssProps`${{\n    /* @ts-ignore */\n    '& > *': {\n      marginTop: '0 !important',\n      marginBottom: '0 !important',\n      marginLeft: '0 !important',\n      marginRight: '0 !important'\n    }\n  }}`\n};\n\ntype SelectedChangeDetail = { previousValue?: boolean; value?: boolean };\n\ntype Props = {\n  /**\n   * Specifies if the chip component is selected.\n   */\n  isSelected?: boolean;\n  /**\n   * Disables the component.\n   */\n  isDisabled?: boolean;\n  /**\n   * Specifies some screen reader text.\n   */\n  accessibleLabel?: string;\n  children: string;\n  /**\n   * Triggered when a chip is clickable, whether by keyboard, mouse, or touch events.\n   */\n  onToggle?: (detail: SelectedChangeDetail) => void;\n  //\n};\n\nexport function Chip({ isSelected, isDisabled, accessibleLabel, children, onToggle }: Props) {\n  const handleAction = useCallback(() => {\n    onToggle?.({ previousValue: isSelected, value: !isSelected });\n  }, [isSelected, onToggle]);\n\n  const { actionableProps, isHover, isActive } = useActionable(handleAction);\n\n  const variant = isDisabled\n    ? 'disabled'\n    : isSelected || isActive\n    ? 'info'\n    : isHover\n    ? 'infoSubtle'\n    : 'infoSubtleLighter';\n\n  const classes = classNames([\n    styles.base,\n    isDisabled ? styles.disabled : `${styles.base} ${styles[variant]} ${cursorandFocusStyle}`,\n    styles.childrenMargins\n  ]);\n  const { isTabbable } = useTabbableMode();\n\n  return isDisabled ? (\n    <div class={classes}>{children}</div>\n  ) : (\n    <div\n      {...actionableProps}\n      class={classes}\n      tabIndex={isTabbable ? 0 : -1}\n      aria-label={accessibleLabel}\n      role=\"switch\"\n      aria-checked={isSelected ? 'true' : 'false'}>\n      {children}\n    </div>\n  );\n}\n"],"names":["styles","isSelected","isDisabled","accessibleLabel","children","onToggle","handleAction","useCallback","previousValue","value","actionableProps","isHover","isActive","useActionable","base","childrenMargins","isTabbable","useTabbableMode"],"mappings":"4NAaA,MAUAA,EAAA,MAAA,oBAAA,cAAA,sBAAA,2BAAA,6CAkFA,UAAAC,WAAAA,EAAAC,WAAAA,EAAAC,gBAAAA,EAAAC,SAAAA,EAAAC,SAAAA,IACE,MAAAC,EAAAC,EAAAA,YAAA,KACEF,MAAAA,GAAAA,EAAA,CAAAG,cAAAP,EAAAQ,OAAAR,KACF,CAAAA,EAAAI,KAEAK,gBAAAA,EAAAC,QAAAA,EAAAC,SAAAA,GAAAC,EAAAA,cAAAP,OAGE,gBAEA,OACAK,EACA,iDAIAX,EAAAc,6CAEAd,EAAAe,mBAEFC,WAAAA,GAAAC,EAAAA"}