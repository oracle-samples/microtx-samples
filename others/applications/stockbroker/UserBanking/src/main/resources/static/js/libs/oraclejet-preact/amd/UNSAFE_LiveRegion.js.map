{"version":3,"file":"UNSAFE_LiveRegion.js","sources":["../../src/UNSAFE_LiveRegion/LiveRegion.tsx"],"sourcesContent":["import { cssProps } from '@oracle/oraclejet-cssprops';\nimport { useCallback, useEffect, useState } from 'preact/hooks';\n\nconst offScreenStyle = cssProps`${{\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  height: '1px',\n  margin: '-1px',\n  overflowX: 'hidden',\n  overflowY: 'hidden',\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  width: '1px',\n  position: 'absolute'\n}}`;\n\ntype Props = {\n  /**\n   * Whether this live region is atomic\n   */\n  atomic?: 'true' | 'false';\n\n  /**\n   * The text to be read out in the live region\n   */\n  children?: string;\n\n  /**\n   * Timeout for updating the text\n   */\n  timeout?: number;\n\n  /**\n   * The value for the aria-live attribute\n   */\n  type?: 'assertive' | 'polite' | 'off';\n};\n\n/**\n * A helper component that renders an aria-live region\n *\n * TODO: Create a more centralized component that can handle aria-live region for\n * the whole application and use context api to communicate\n */\nfunction LiveRegion({ atomic = 'false', children = '', timeout = 100, type = 'polite' }: Props) {\n  const ariaLiveText = useLiveText(children, timeout);\n\n  return (\n    <span aria-live={type} aria-atomic={atomic} class={offScreenStyle}>\n      {ariaLiveText}\n    </span>\n  );\n}\n\n/**\n * A custom hook for handling the aria-live region\n *\n * @param text The aria-live text to use\n * @param timeout The timeout for setting the aria-live text async\n * @returns The aria-live text\n */\nfunction useLiveText(text: string, timeout: number) {\n  const [liveText, setLiveText] = useState<string>();\n  const updateText = useCallback(() => setLiveText(text), [text]);\n  const updateTextAsync = useCallback(() => setTimeout(updateText, timeout), [updateText, timeout]);\n\n  useEffect(() => {\n    const timeoutId = updateTextAsync();\n\n    return () => clearTimeout(timeoutId);\n  }, [updateTextAsync]);\n\n  return liveText;\n}\n\nexport { LiveRegion };\n"],"names":["atomic","children","timeout","type","text","updateText","useCallback","setLiveText","timeoutId","updateTextAsync","clearTimeout","liveText","_jsx","Object","assign","class","ariaLiveText"],"mappings":"6GA8CA,UAAAA,OAAAA,EAAA,QAAAC,SAAAA,EAAA,GAAAC,QAAAA,EAAA,IAAAC,KAAAA,EAAA,mBAiBA,SAAAC,EAAAF,2BAEEG,EAAAC,EAAAA,YAAA,IAAAC,EAAAH,GAAA,CAAAA,+CASA,wBALE,MAAAI,EAAAC,IAEA,MAAA,IAAAC,aAAAF,IACF,CAAAC,IAEAE,QAzBA,OAAAC,MAAA,OAAAC,OAAAC,OAAA,CAAA,YAAAX,EAAA,cAAAH,EAAAe,MA9CF,YA8CE,CAAAd,SAAAe"}