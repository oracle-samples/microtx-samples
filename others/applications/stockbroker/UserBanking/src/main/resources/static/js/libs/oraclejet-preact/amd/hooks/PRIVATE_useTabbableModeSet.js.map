{"version":3,"file":"PRIVATE_useTabbableModeSet.js","sources":["../../../src/hooks/PRIVATE_useTabbableModeSet/useTabbableModeSet.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { useCallback, useState } from 'preact/hooks';\nimport { isKeyDefined } from '../../utils/UNSAFE_keys';\n\n/**\n * Hook for handling Tabbable mode set provider components.\n *\n * @param contains - callback to check  whether an element is in set\n * @param keyExtractor - function to extract the key based on provided element\n * @param currentKey - current key navigation \"cursor\" is on\n * @param onTabbableModeDisable - callback to parent when set is disabled\n * @param onTabbableModeEnable - callback to parent when set is enabled\n * @returns isCurrentTabbableKey - callback for parent to check if key is in interactive mode\n * @returns tabbableSetProps - event handlers mode relies on\n */\nexport function useTabbableModeSet<K>(\n  contains: (elem: Element | null) => boolean,\n  keyExtractor: (element: HTMLElement) => K | null,\n  currentKey?: K,\n  onTabbableModeDisable?: (target: EventTarget | null, isKeyboardEvent: boolean) => void,\n  onTabbableModeEnable?: (key: K) => void\n): [\n  (key?: K) => boolean,\n  {\n    onFocus: (event: FocusEvent) => void;\n    onBlur: (event: FocusEvent) => void;\n    onKeyUp: (event: KeyboardEvent) => void;\n    onPointerDown: (event: MouseEvent) => void;\n  }\n] {\n  // Track which row is in actionable in state\n  const [currentTabbableKey, setCurrentTabbableKey] = useState<K>();\n  const disableTabbableMode = useCallback(\n    (target: EventTarget | null, isKeyboardEvent = false) => {\n      setCurrentTabbableKey(undefined);\n      onTabbableModeDisable && onTabbableModeDisable(target, isKeyboardEvent);\n    },\n    [onTabbableModeDisable, setCurrentTabbableKey]\n  );\n  const enableTabbableMode = useCallback(\n    (key: K) => {\n      setCurrentTabbableKey(key);\n      onTabbableModeEnable && onTabbableModeEnable(key);\n    },\n    [onTabbableModeEnable, setCurrentTabbableKey]\n  );\n  const isCurrentTabbableKey = useCallback(\n    (key?: K) => {\n      return key === currentTabbableKey;\n    },\n    [currentTabbableKey]\n  );\n\n  const onFocus = (event: FocusEvent) => {\n    const key = keyExtractor(event.target as HTMLElement) as K;\n    if (isKeyDefined(key) && !isCurrentTabbableKey(key)) {\n      enableTabbableMode(key);\n    }\n  };\n\n  const onBlur = (event: FocusEvent) => {\n    if (!event.relatedTarget || !contains(event.relatedTarget as Element)) {\n      disableTabbableMode(event.relatedTarget);\n    }\n  };\n\n  const onPointerDown = (event: MouseEvent) => {\n    const key = keyExtractor(event.target as HTMLElement) as K;\n    if (currentTabbableKey !== undefined && !isCurrentTabbableKey(key)) {\n      disableTabbableMode(event.target);\n    }\n  };\n\n  const onKeyUp = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.key === 'F2') {\n        currentKey !== undefined && !isCurrentTabbableKey(currentKey)\n          ? enableTabbableMode(currentKey)\n          : disableTabbableMode(event.target, true);\n      }\n      if (event.key === 'Esc' || event.key === 'Escape') {\n        disableTabbableMode(event.target, true);\n      }\n    },\n    [currentKey, disableTabbableMode, enableTabbableMode, isCurrentTabbableKey]\n  );\n\n  const tabbableSetProps = {\n    onFocus,\n    onBlur,\n    onKeyUp,\n    onPointerDown\n  };\n\n  return [isCurrentTabbableKey, tabbableSetProps];\n}\n"],"names":["contains","keyExtractor","currentKey","onTabbableModeDisable","onTabbableModeEnable","currentTabbableKey","setCurrentTabbableKey","useState","disableTabbableMode","useCallback","target","isKeyboardEvent","undefined","enableTabbableMode","key","isCurrentTabbableKey","tabbableSetProps","onFocus","event","isKeyDefined","onBlur","relatedTarget","onKeyUp","onPointerDown"],"mappings":"2GAqBM,SACJA,EACAC,EACAC,EACAC,EACAC,GAWA,MAAOC,EAAoBC,GAAyBC,EAAQA,WACtDC,EAAsBC,EAAWA,YACrC,CAACC,EAA4BC,GAAkB,KAC7CL,OAAsBM,GACtBT,GAAyBA,EAAsBO,EAAQC,IAEzD,CAACR,EAAuBG,IAEpBO,EAAqBJ,cACxBK,IACCR,EAAsBQ,GACtBV,GAAwBA,EAAqBU,IAE/C,CAACV,EAAsBE,IAEnBS,EAAuBN,cAC1BK,GACQA,IAAQT,EAEjB,CAACA,IAqCGW,EAAmB,CACvBC,QAnCeC,IACf,MAAMJ,EAAMb,EAAaiB,EAAMR,QAC3BS,EAAYA,aAACL,KAASC,EAAqBD,IAC7CD,EAAmBC,IAiCrBM,OA7BcF,IACTA,EAAMG,eAAkBrB,EAASkB,EAAMG,gBAC1Cb,EAAoBU,EAAMG,gBA4B5BC,QAjBcb,cACbS,IACmB,OAAdA,EAAMJ,WACOF,IAAfV,GAA6Ba,EAAqBb,GAE9CM,EAAoBU,EAAMR,QAAQ,GADlCG,EAAmBX,IAGP,QAAdgB,EAAMJ,KAA+B,WAAdI,EAAMJ,KAC/BN,EAAoBU,EAAMR,QAAQ,IAGtC,CAACR,EAAYM,EAAqBK,EAAoBE,IAOtDQ,cAzBqBL,IACrB,MAAMJ,EAAMb,EAAaiB,EAAMR,aACJE,IAAvBP,GAAqCU,EAAqBD,IAC5DN,EAAoBU,EAAMR,UAyB9B,MAAO,CAACK,EAAsBC"}