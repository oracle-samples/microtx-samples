{"version":3,"file":"HighlightText-44f9023f.js","sources":["../../src/UNSAFE_HighlightText/HighlightText.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { Fragment } from 'preact';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\n\nconst highlightStyles = cssProps`${{\n  fontWeight: 700\n}}`;\n\ntype Props = {\n  /**\n   * The text string to apply highlighting to.\n   */\n  children?: string;\n  /**\n   * The text string to match.\n   */\n  matchText?: string;\n};\n\n/**\n * Renders a text string with highlighting applied to the given text to match.\n */\nexport function HighlightText({ children = '', matchText = '' }: Props) {\n  return highlighter(children, matchText);\n}\n\nconst HIGHLIGHT_TOKEN = '__@@__';\nconst HIGHLIGHT_PATTERN = `${HIGHLIGHT_TOKEN}$&${HIGHLIGHT_TOKEN}`;\n\nfunction highlighter(unhighlightedText: string, matchText: string) {\n  if (matchText.length > 0 && unhighlightedText.length > 0) {\n    const escapedMatchText = escapeRegExp(matchText);\n    const highlightedText = unhighlightedText.replace(\n      new RegExp(escapedMatchText, 'gi'),\n      HIGHLIGHT_PATTERN\n    );\n    const tokens = highlightedText.split(HIGHLIGHT_TOKEN);\n    const nodes = tokens.map((current, index) =>\n      index % 2 == 0 ? current : <span class={highlightStyles}>{current}</span>\n    );\n    return <Fragment>{nodes}</Fragment>;\n  }\n  return <Fragment>{unhighlightedText}</Fragment>;\n}\n\nfunction escapeRegExp(str: string) {\n  // copied from:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\n  return str.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n"],"names":["highlightStyles","HIGHLIGHT_TOKEN","HIGHLIGHT_PATTERN","children","matchText","unhighlightedText","escapedMatchText","nodes","replace","RegExp","map","current","index","_jsx","Object","assign","class","Fragment","highlighter"],"mappings":"0FAWA,MAAAA,EAAA,WAsBA,MAAAC,EAAA,SACAC,EAAA,iCALA,UAAAC,SAAAA,EAAA,GAAAC,UAAAA,EAAA,KACE,OAMF,SAAAC,EAAAD,8BAEI,MAAAE,EAAAF,0CAMAG,EALAF,EAAAG,QAAA,IAAAC,OAAAH,EAAA,MAAAJ,YAKAQ,IAAA,CAAAC,EAAAC,IAAAA,EAAA,GAAA,EAAAD,EAAAE,EAAAA,IAAA,OAAAC,OAAAC,OAAA,CAAAC,MAAAhB,GAAA,CAAAG,SAAAQ,MAGA,OAAAE,EAAAA,IAAAI,EAAAA,SAAA,CAAAd,SAAAI,IAEF,OAAAM,EAAAA,IAAAI,EAAAA,SAAA,CAAAd,SAAAE,IAnBAa,CAAAf,EAAAC"}