{"version":3,"file":"clientHints-45edd40b.js","sources":["../../src/utils/PRIVATE_clientHints/clientHints.ts"],"sourcesContent":["// Typescript does not support NavigatorUAData in its DOM lib,\n// therefore we declare our own type - see:\n//    https://wicg.github.io/ua-client-hints/#interface\ntype NavigatorUAData = {\n  brands: Array<{ brand: string; version: string }>;\n  mobile: boolean;\n  platform: string;\n};\n\n// Enum types\ntype ClientBrowser = 'chrome' | 'edge' | 'firefox' | 'safari' | 'unknown';\n\ntype ClientDeviceType = 'phone' | 'tablet' | 'unknown';\n\ntype ClientPlatform = 'android' | 'ios' | 'mac' | 'windows' | 'unknown';\n\n// FIXME: Can we hide these exported type declarations from external consumers? See JET-50202\n// Defines the set of available hints about the client rendering environment\nexport type ClientHints = {\n  browser: ClientBrowser;\n  browserMajorVersion: number;\n  deviceType: ClientDeviceType;\n  platform: ClientPlatform;\n  hasTouchSupport: boolean;\n  isHybrid: boolean;\n};\n\nconst defaultClientHints: ClientHints = {\n  browser: 'unknown',\n  browserMajorVersion: -1,\n  deviceType: 'unknown',\n  platform: 'unknown',\n  hasTouchSupport: false,\n  isHybrid: false\n};\n\nif (typeof window !== 'undefined') {\n  Object.assign(defaultClientHints, {\n    hasTouchSupport: 'ontouchstart' in window,\n    isHybrid: window.matchMedia?.('(hover: hover) and (any-pointer: coarse)').matches\n  });\n}\n\nlet cachedClientHints: ClientHints;\n\nexport function getClientHints(uaString?: string): Readonly<ClientHints> {\n  // Compute if there is no cached result, OR if a userAgent string\n  //  was passed in as an argument\n  if (cachedClientHints === undefined || uaString) {\n    let hints: ClientHints;\n    const userAgentData =\n      typeof navigator !== 'undefined' && ((navigator as any)['userAgentData'] as NavigatorUAData);\n    if (userAgentData) {\n      hints = getHintsFromUserAgentData(userAgentData);\n    } else {\n      hints = getHintsFromUserAgentString(\n        uaString ?? (typeof navigator !== 'undefined' ? navigator.userAgent : '')\n      );\n    }\n\n    // If no argument was passed in then this was computed from Navigator properties,\n    // so cache the result.\n    if (!uaString) {\n      cachedClientHints = { ...hints };\n      Object.freeze(cachedClientHints);\n    }\n    // Otherwise, return the bespoke results without touching the cache\n    else {\n      return hints;\n    }\n  }\n  return cachedClientHints;\n}\n\nfunction getHintsFromUserAgentData(userAgentData: NavigatorUAData): Readonly<ClientHints> {\n  const hints = { ...defaultClientHints };\n\n  // Loop through brands => browser, browserMajorVersion\n  for (const item of userAgentData.brands) {\n    const brand = item.brand.toLowerCase();\n    if (brand.indexOf('chrome') > -1) {\n      hints.browser = 'chrome';\n    } else if (brand.indexOf('edge') > -1) {\n      hints.browser = 'edge';\n    }\n    if (hints.browser !== 'unknown') {\n      hints.browserMajorVersion = Number(item.version);\n      break;\n    }\n  }\n\n  // Set deviceType, platform\n  const platform = userAgentData.platform.toLowerCase();\n  if (platform === 'windows') {\n    hints.platform = 'windows';\n  } else if (platform === 'android') {\n    hints.platform = 'android';\n    hints.deviceType = userAgentData.mobile ? 'phone' : 'tablet';\n  } else if (platform === 'macos') {\n    hints.platform = 'mac';\n  }\n  // TODO: Verify userAgentData support in Chrome 100 on iPhone/iPad when available\n  /*\n  else if (platform.indexOf('iphone') > -1) {\n    hints.platform = 'ios';\n    hints.deviceType = 'phone';\n  } else if (platform.indexOf('ipad') > -1) {\n    hints.platform = 'ios';\n    hints.deviceType = 'tablet';\n  } else if (platform.indexOf('ios') > -1) {\n    hints.platform = 'ios';\n    hints.deviceType = (userAgentData.mobile ? 'phone' : 'tablet');\n  }\n  */\n  return hints;\n}\n\nfunction getHintsFromUserAgentString(userAgent: string): Readonly<ClientHints> {\n  const hints = { ...defaultClientHints };\n\n  // Normalize the userAgent string\n  userAgent = userAgent.toLowerCase();\n\n  // Check platform, deviceType\n  if (userAgent.indexOf('iphone') > -1) {\n    hints.platform = 'ios';\n    hints.deviceType = 'phone';\n  } else if (\n    userAgent.indexOf('ipad') > -1 ||\n    (typeof navigator !== 'undefined' &&\n      navigator.platform === 'MacIntel' &&\n      (navigator as any)['standalone'])\n  ) {\n    hints.platform = 'ios';\n    hints.deviceType = 'tablet';\n  } else if (userAgent.indexOf('mac') > -1) {\n    hints.platform = 'mac';\n  } else if (userAgent.indexOf('android') > -1) {\n    hints.platform = 'android';\n  } else if (userAgent.indexOf('win') > -1) {\n    hints.platform = 'windows';\n  }\n\n  // Now work on browser, browserMajorVersion\n  if (userAgent.indexOf('edg') > -1) {\n    hints.browser = 'edge';\n    hints.browserMajorVersion = parseMajorVersion(userAgent, /edg\\/(\\d+)/);\n  } else if (userAgent.indexOf('chrome') > -1) {\n    hints.browser = 'chrome';\n    hints.browserMajorVersion = parseMajorVersion(userAgent, /chrome\\/(\\d+)/);\n  } else if (userAgent.indexOf('crios') > -1) {\n    hints.browser = 'chrome';\n    hints.browserMajorVersion = parseMajorVersion(userAgent, /crios\\/(\\d+)/);\n  } else if (userAgent.indexOf('fxios') > -1) {\n    hints.browser = 'firefox';\n    hints.browserMajorVersion = parseMajorVersion(userAgent, /fxios\\/(\\d+)/);\n  } else if (userAgent.indexOf('firefox') > -1) {\n    hints.browser = 'firefox';\n    hints.browserMajorVersion = parseMajorVersion(userAgent, /rv:(\\d+)/);\n  } else if (userAgent.indexOf('safari') > -1) {\n    hints.browser = 'safari';\n    hints.browserMajorVersion = parseMajorVersion(userAgent, /version\\/(\\d+)/);\n  }\n\n  return hints;\n}\n\nfunction parseMajorVersion(userAgent: string, majorVersionPattern: RegExp): number {\n  let majorVer;\n  const matches = userAgent.match(majorVersionPattern);\n  if (matches) {\n    const majorVerString = matches[1];\n    if (majorVerString) {\n      majorVer = parseInt(majorVerString);\n    }\n  }\n  return majorVer ?? -1;\n}\n"],"names":["defaultClientHints","browser","browserMajorVersion","deviceType","platform","hasTouchSupport","isHybrid","cachedClientHints","parseMajorVersion","userAgent","majorVersionPattern","majorVer","matches","match","majorVerString","parseInt","window","Object","assign","matchMedia","_a","call","uaString","undefined","hints","userAgentData","navigator","item","brands","brand","toLowerCase","indexOf","Number","version","mobile","getHintsFromUserAgentData","getHintsFromUserAgentString","freeze"],"mappings":"kDA2BA,MAAMA,EAAkC,CACtCC,QAAS,UACTC,qBAAsB,EACtBC,WAAY,UACZC,SAAU,UACVC,iBAAiB,EACjBC,UAAU,GAUZ,IAAIC,EA4HJ,SAASC,EAAkBC,EAAmBC,GAC5C,IAAIC,EACJ,MAAMC,EAAUH,EAAUI,MAAMH,GAChC,GAAIE,EAAS,CACX,MAAME,EAAiBF,EAAQ,GAC3BE,IACFH,EAAWI,SAASD,IAGxB,OAAOH,MAAAA,EAAAA,GAAa,EA5IA,oBAAXK,QACTC,OAAOC,OAAOlB,EAAoB,CAChCK,gBAAiB,iBAAkBW,OACnCV,SAA8B,UAApBU,OAAOG,kBAAa,IAAAC,OAAA,EAAAA,EAAAC,KAAAL,OAAA,4CAA4CJ,2BAMxE,SAAyBU,GAG7B,QAA0BC,IAAtBhB,GAAmCe,EAAU,CAC/C,IAAIE,EACJ,MAAMC,EACiB,oBAAdC,WAA+BA,UAAiB,cAWzD,GATEF,EADEC,EAsBR,SAAmCA,GACjC,MAAMD,EAAKP,OAAAC,OAAA,GAAQlB,GAGnB,IAAK,MAAM2B,KAAQF,EAAcG,OAAQ,CACvC,MAAMC,EAAQF,EAAKE,MAAMC,cAMzB,GALID,EAAME,QAAQ,WAAa,EAC7BP,EAAMvB,QAAU,SACP4B,EAAME,QAAQ,SAAW,IAClCP,EAAMvB,QAAU,QAEI,YAAlBuB,EAAMvB,QAAuB,CAC/BuB,EAAMtB,oBAAsB8B,OAAOL,EAAKM,SACxC,OAKJ,MAAM7B,EAAWqB,EAAcrB,SAAS0B,cACvB,YAAb1B,EACFoB,EAAMpB,SAAW,UACK,YAAbA,GACToB,EAAMpB,SAAW,UACjBoB,EAAMrB,WAAasB,EAAcS,OAAS,QAAU,UAC9B,UAAb9B,IACToB,EAAMpB,SAAW,OAenB,OAAOoB,EA7DKW,CAA0BV,GAgExC,SAAqChB,GACnC,MAAMe,EAAKP,OAAAC,OAAA,GAAQlB,IAGnBS,EAAYA,EAAUqB,eAGRC,QAAQ,WAAa,GACjCP,EAAMpB,SAAW,MACjBoB,EAAMrB,WAAa,SAEnBM,EAAUsB,QAAQ,SAAW,GACP,oBAAdL,WACiB,aAAvBA,UAAUtB,UACTsB,UAAiB,YAEpBF,EAAMpB,SAAW,MACjBoB,EAAMrB,WAAa,UACVM,EAAUsB,QAAQ,QAAU,EACrCP,EAAMpB,SAAW,MACRK,EAAUsB,QAAQ,YAAc,EACzCP,EAAMpB,SAAW,UACRK,EAAUsB,QAAQ,QAAU,IACrCP,EAAMpB,SAAW,WAIfK,EAAUsB,QAAQ,QAAU,GAC9BP,EAAMvB,QAAU,OAChBuB,EAAMtB,oBAAsBM,EAAkBC,EAAW,eAChDA,EAAUsB,QAAQ,WAAa,GACxCP,EAAMvB,QAAU,SAChBuB,EAAMtB,oBAAsBM,EAAkBC,EAAW,kBAChDA,EAAUsB,QAAQ,UAAY,GACvCP,EAAMvB,QAAU,SAChBuB,EAAMtB,oBAAsBM,EAAkBC,EAAW,iBAChDA,EAAUsB,QAAQ,UAAY,GACvCP,EAAMvB,QAAU,UAChBuB,EAAMtB,oBAAsBM,EAAkBC,EAAW,iBAChDA,EAAUsB,QAAQ,YAAc,GACzCP,EAAMvB,QAAU,UAChBuB,EAAMtB,oBAAsBM,EAAkBC,EAAW,aAChDA,EAAUsB,QAAQ,WAAa,IACxCP,EAAMvB,QAAU,SAChBuB,EAAMtB,oBAAsBM,EAAkBC,EAAW,mBAG3D,OAAOe,EA7GKY,CACNd,MAAAA,EAAAA,EAAkC,oBAAdI,UAA4BA,UAAUjB,UAAY,IAMrEa,EAMH,OAAOE,EALPjB,EAAiBU,OAAAC,OAAA,GAAQM,GACzBP,OAAOoB,OAAO9B,GAOlB,OAAOA"}