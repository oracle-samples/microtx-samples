{"version":3,"file":"PRIVATE_useItemAction.js","sources":["../../../src/hooks/PRIVATE_useItemAction/useItemAction.tsx"],"sourcesContent":["import { useCallback } from 'preact/hooks';\nimport { DataState, ItemActionDetail, ListItemContext, Metadata } from '../../UNSAFE_Collection';\n\nimport { keyExtractor } from '../../utils/PRIVATE_collectionUtils';\n\nexport const useItemAction = <K extends string | number, D>(\n  currentKey: K | undefined,\n  dataState: DataState<K, D> | null,\n  onItemAction: ((detail: ItemActionDetail<K, D>) => void) | undefined,\n  itemSelector: string\n) => {\n  if (!dataState || !onItemAction) {\n    return {};\n  }\n\n  return {\n    onClick: useCallback(\n      (event: MouseEvent) => {\n        const key = keyExtractor(event.target as HTMLElement, itemSelector) as K;\n        if (handleItemAction(key, dataState, 'click', onItemAction)) {\n          event.stopPropagation();\n        }\n      },\n      [dataState, onItemAction]\n    ),\n    onKeyDown: useCallback(\n      (event: KeyboardEvent) => {\n        if (event.key === 'Enter') {\n          handleItemAction(currentKey, dataState, 'enter', onItemAction);\n        } else if (event.key === ' ') {\n          handleItemAction(currentKey, dataState, 'spacebar', onItemAction);\n          event.preventDefault();\n        }\n      },\n      [dataState, onItemAction, currentKey]\n    )\n  };\n};\n\nconst handleItemAction = <K, D>(\n  key: K | undefined,\n  dataState: DataState<K, D>,\n  reason: ItemActionDetail<K, D>['reason'],\n  onItemAction: (detail: ItemActionDetail<K, D>) => void\n) => {\n  if (key !== undefined) {\n    const context = findItemContext(key, dataState);\n    context && onItemAction({ context, reason });\n    return context !== undefined;\n  }\n  return false;\n};\n\n// returns a ListItemContext based on key\nconst findItemContext = <K, D>(\n  key: K,\n  dataState: DataState<K, D>\n): ListItemContext<K, D> | undefined => {\n  const index = dataState?.data?.findIndex((d) => d.metadata.key === key) ?? -1;\n  if (index > -1) {\n    const context: ListItemContext<K, D> = {\n      index: index + (dataState?.offset || 0),\n      data: dataState?.data[index].data as D,\n      metadata: dataState?.data[index].metadata as Metadata<K>\n    };\n    return context;\n  }\n  return undefined;\n};\n"],"names":["handleItemAction","key","dataState","reason","onItemAction","undefined","context","findItemContext","index","_b","_a","data","findIndex","d","metadata","offset","currentKey","itemSelector","onClick","useCallback","event","keyExtractor","target","stopPropagation","onKeyDown","preventDefault"],"mappings":"2HAKa,MAkCPA,EAAmB,CACvBC,EACAC,EACAC,EACAC,KAEA,QAAYC,IAARJ,EAAmB,CACrB,MAAMK,EAAUC,EAAgBN,EAAKC,GAErC,OADAI,GAAWF,EAAa,CAAEE,QAAAA,EAASH,OAAAA,SAChBE,IAAZC,EAET,OAAO,GAIHC,EAAkB,CACtBN,EACAC,aAEA,MAAMM,EAAqE,QAA7DC,EAAe,QAAfC,EAAAR,MAAAA,OAAS,EAATA,EAAWS,YAAI,IAAAD,OAAA,EAAAA,EAAEE,UAAWC,GAAMA,EAAEC,SAASb,MAAQA,UAAQ,IAAAQ,EAAAA,GAAC,EAC5E,GAAID,GAAS,EAAG,CAMd,MALuC,CACrCA,MAAOA,IAASN,MAAAA,OAAS,EAATA,EAAWa,SAAU,GACrCJ,KAAMT,MAAAA,OAAS,EAATA,EAAWS,KAAKH,GAAOG,KAC7BG,SAAUZ,MAAAA,OAAS,EAATA,EAAWS,KAAKH,GAAOM,4BA1DV,CAC3BE,EACAd,EACAE,EACAa,IAEKf,GAAcE,EAIZ,CACLc,QAASC,EAAAA,YACNC,IACC,MAAMnB,EAAMoB,EAAYA,aAACD,EAAME,OAAuBL,GAClDjB,EAAiBC,EAAKC,EAAW,QAASE,IAC5CgB,EAAMG,mBAGV,CAACrB,EAAWE,IAEdoB,UAAWL,EAAAA,YACRC,IACmB,UAAdA,EAAMnB,IACRD,EAAiBgB,EAAYd,EAAW,QAASE,GAC1B,MAAdgB,EAAMnB,MACfD,EAAiBgB,EAAYd,EAAW,WAAYE,GACpDgB,EAAMK,mBAGV,CAACvB,EAAWE,EAAcY,KAtBrB"}