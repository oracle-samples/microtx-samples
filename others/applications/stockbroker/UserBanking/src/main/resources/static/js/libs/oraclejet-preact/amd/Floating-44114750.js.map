{"version":3,"file":"Floating-44114750.js","sources":["../../src/UNSAFE_Floating/FloatingTail.tsx","../../src/UNSAFE_Floating/Floating.tsx"],"sourcesContent":["import { forwardRef } from 'preact/compat';\nimport { RefObject } from 'preact';\nimport { PositionData, Coords } from '../hooks/UNSAFE_useFloating';\n\nconst FloatingTail = forwardRef<HTMLDivElement>(({}, arrowRef) => {\n  return (\n    <div ref={arrowRef}> {/*Outer arrow - shadow*/}\n      <div></div> {/*Inner arrow - body*/}\n    </div>\n  );\n});\n\nfunction renderTail(\n  data: PositionData,\n  anchorRef: RefObject<Element | Coords>,\n  arrowRef: RefObject<Element>,\n  tail: 'none' | 'simple',\n  isRtl: boolean\n) {\n  if (tail === 'simple' && data.arrow) {\n    const { x, y, centerOffset } = data.arrow;\n    const arrowEl = arrowRef.current as Element;\n    const arrowSize = 7;\n    const arrowSizeCorner = 6;\n    const arrowInnerEl = arrowRef.current?.querySelector('div') as Element;\n    const arrowInnerSize = 5;\n    const arrowInnerSizeCorner = 5;\n    const arrowCommonStyle = {\n      position: 'absolute',\n      width: '0px',\n      height: '0px'\n    };\n    let anchorRefHeight = 0;\n    let anchorRefWidth = 0;\n    const current = anchorRef.current;\n\n    // @ts-ignore. Type 'Element | Coords' issues\n    // Property 'x' does not exist on type 'Element'.\n    // Property 'y' does not exist on type 'Element'.\n    const isAnchorRefElement = current?.x === undefined && current?.y === undefined;\n    if (isAnchorRefElement) {\n      // @ts-ignore. Property 'getBoundingClientRect' does not exist on type 'Coords'.\n      anchorRefHeight = Math.round(current.getBoundingClientRect().height);\n      // @ts-ignore. Property 'getBoundingClientRect' does not exist on type 'Coords'.\n      anchorRefWidth = Math.round(anchorRef.current?.getBoundingClientRect().width);\n    }\n    const isCornerVerticalPlacement = isAnchorRefElement ?\n      Math.abs(centerOffset) >= anchorRefHeight / 2 - arrowSize / 2 :\n      ['start-top-corner', 'start-bottom-corner', 'end-top-corner', 'end-bottom-corner'].includes(data.origPlacement);\n    const isCornerHorizontalPlacement = isAnchorRefElement ?\n      Math.abs(centerOffset) >= anchorRefWidth / 2 - arrowSize / 2 :\n      ['top-start-corner', 'top-end-corner', 'bottom-start-corner', 'bottom-end-corner'].includes(data.origPlacement);\n    const isCenter = centerOffset === 0;\n    const isCenterOffsetPositive = centerOffset > 0;\n\n    // Set styles of the arrow\n    setElementStyle(arrowCommonStyle, arrowEl);\n    setElementStyle(arrowCommonStyle, arrowInnerEl);\n\n    // Set sizes of the arrow\n    setArrowSizes(isCornerVerticalPlacement || isCornerHorizontalPlacement);\n\n    // Corner vs. normal arrow\n    function setArrowSizes(isCornerPlacement?: boolean) {\n      // Outer arrow (shadow)\n      const arrowFinalSize = isCornerPlacement ? arrowSizeCorner : arrowSize;\n      setArrowStyle({\n        borderTop: `${getSize(arrowFinalSize)} solid rgba(var(--oj-c-PRIVATE-DO-NOT-USE-palette-neutral-rgb-90), 0.1)`,\n        borderRight: getTransparentBorder(arrowFinalSize),\n        borderLeft: getTransparentBorder(arrowFinalSize)\n      });\n      // Inner arrow\n      const arrowInnerFinalSize = isCornerPlacement ? arrowInnerSizeCorner : arrowInnerSize;\n      setArrowInnerStyle({\n        borderTop: `${getSize(arrowInnerFinalSize)} solid var(--oj-c-PRIVATE-DO-NOT-USE-popup-bg-color)`,\n        borderRight: `${getTransparentBorder(arrowInnerFinalSize)}`,\n        borderLeft: `${getTransparentBorder(arrowInnerFinalSize)}`,\n      })\n    }\n\n    function setElementStyle(style: object, element: Element) {\n      //@ts-ignore - regarding types arrowEl.style is not under our control\n      Object.assign(element?.style, style);\n    }\n\n    function setArrowStyle(style: object) {\n      setElementStyle(style, arrowEl);\n    }\n\n    function setArrowInnerStyle(style: object) {\n      setElementStyle(style, arrowInnerEl);\n    }\n\n    function getTurn(eighth: number) {\n      return `rotate(${(eighth) * 45}deg)`;\n    }\n\n    function getSize(size: number) {\n      return `${size}px`;\n    }\n\n    function getTransparentBorder(size: number) {\n      return `${getSize(size)} solid transparent`;\n    }\n\n    const placementArr = data.placement.split('-');\n    const side = placementArr[0];\n\n    switch(side) {\n      case 'top': setArrowTop(); break;\n      case 'end': isRtl ? setArrowStart() : setArrowEnd();break;\n      case 'bottom': setArrowBottom(); break;\n      case 'start': isRtl ? setArrowEnd() : setArrowStart(); break;\n    }\n\n    function setArrowTop() {\n      if (x != undefined) {\n        if (isCornerHorizontalPlacement) {\n          // Top corners\n          setArrowStyle({\n            top: '', // flip 'reset'\n            bottom: getSize(-arrowSize + 2),\n            left: getSize(x + (isCenterOffsetPositive ? 5 : -5)),\n            transform: getTurn(isCenterOffsetPositive ? 5 : 3)\n          });\n          setCornerArrowInner();\n        } else {\n          setArrowStyle({\n            top: '', // flip 'reset'\n            bottom: getSize(-arrowSize),\n            left: isCenter ? getSize(x) : getSize(x + (isCenterOffsetPositive ? 1 : -1)),\n            transform: getTurn(0)\n          });\n          setNonCornerArrowInner();\n        }\n      }\n    }\n\n    function setArrowEnd() {\n      if (y != undefined) {\n        if (isCornerVerticalPlacement) {\n          // End corners\n          setArrowStyle({\n            top: getSize(y + (isCenterOffsetPositive ? 2 : -2)),\n            right: '', // flip 'reset'\n            left: getSize(-arrowSize -1),\n            transform: getTurn(isCenterOffsetPositive ? 7 : 5)\n          });\n          setCornerArrowInner();\n        } else {\n          // End\n          setArrowStyle({\n            top: isCenter ? getSize(y) : getSize(y + (isCenterOffsetPositive ? -2 : +2)),\n            right: '', // flip 'reset'\n            left: getSize(-arrowSize * 1.5),\n            transform: getTurn(2)\n          });\n          setNonCornerArrowInner();\n        }\n      }\n    }\n\n    function setArrowBottom() {\n      if (x != undefined) {\n        if (isCornerHorizontalPlacement) {\n          // Bottom corners\n          setArrowStyle({\n            top: getSize(-arrowSize + 3),\n            bottom: '', // flip 'reset'\n            left: getSize(x + (isCenterOffsetPositive ? 4 : -4)),\n            transform: getTurn(isCenterOffsetPositive ? 2 : 6)\n          });\n          setArrowInnerStyle({\n            top: getSize(-arrowInnerSize),\n            left: getSize(-arrowInnerSize + (isCenterOffsetPositive ? 1 : -1))\n          });\n        } else {\n          setArrowStyle({\n            top: getSize(-arrowSize),\n            bottom: '', // flip 'reset'\n            left: isCenter ? getSize(x) : getSize(x + (isCenterOffsetPositive ? 1 : -1)),\n            transform: getTurn(4)\n          });\n          setNonCornerArrowInner();\n        }\n      }\n    }\n\n    function setArrowStart() {\n      if (y != undefined) {\n        if (isCornerVerticalPlacement) {\n          // Start corners\n          setArrowStyle({\n            top: getSize(y + (isCenterOffsetPositive ? 2 : -2)),\n            right: getSize(-arrowSize - 1),\n            left: '', // flip 'reset'\n            transform: getTurn(isCenterOffsetPositive ? 1 : 3)\n          });\n          setArrowInnerStyle({\n            top: getSize(-arrowInnerSize),\n            left: getSize(-arrowInnerSize + (isCenterOffsetPositive ? -2 : 2))\n          });\n        } else {\n          // Start\n          setArrowStyle({\n            top: isCenter ? getSize(y) : getSize(y + (isCenterOffsetPositive ? -2 : +2)),\n            right: getSize(-arrowSize * 1.5),\n            left: '', // flip 'reset'\n            transform: getTurn(6)\n          });\n          setNonCornerArrowInner();\n        }\n      }\n    }\n\n    function setCornerArrowInner() {\n      setArrowInnerStyle({\n        top: getSize(-arrowInnerSize),\n        left: getSize(-arrowInnerSize + (isCenterOffsetPositive ? 2 : -2))\n      });\n    }\n\n    function setNonCornerArrowInner() {\n      setArrowInnerStyle({\n        top: getSize(-arrowInnerSize - 2),\n        left: getSize(-arrowInnerSize)\n      });\n    }\n  }\n}\n\nexport { FloatingTail, renderTail };\n","import { RefObject } from 'preact';\nimport { useLayoutEffect, useMemo, useState, useRef, useCallback } from 'preact/hooks';\nimport { forwardRef, ForwardedRef } from 'preact/compat';\nimport { autoUpdate, arrow } from '@floating-ui/dom';\nimport {\n  useFloating,\n  shift,\n  flip,\n  offset,\n  limitShift,\n  PositionData\n} from '../hooks/UNSAFE_useFloating';\nimport { mergeRefs } from '../utils/PRIVATE_refUtils';\nimport { Offset, Placement, Coords, VirtualElement, Rect } from '../hooks/UNSAFE_useFloating';\nimport { useOutsideClick } from '../hooks/UNSAFE_useOutsideClick';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { FloatingTail, renderTail } from './FloatingTail';\n\ntype IntrinsicProps = Pick<HTMLAttributesSignalExcluded<HTMLDivElement>, 'children' | 'class'>;\n\ntype FlipOptions = {\n  mainAxis?: boolean; // This is the main axis in which overflow is checked to perform a flip. Default true.\n  crossAxis?: boolean; // This is the cross axis in which overflow is checked to perform a flip, the opposite axis of mainAxis. Default false.\n};\n\ntype ShiftOptions = {\n  mainAxis?: boolean; // This is the main axis in which shifting is applied. Default true.\n  crossAxis?: boolean; // This is the cross axis in which shifting is applied, the opposite axis of mainAxis. Default false\n};\n\ntype Props = IntrinsicProps & {\n  /**\n   * Placement of the floating element relative to the trigger.\n   * Possible values are:\n   * <p> <code>'top' </code> <code>'top-start' </code> <code> 'top-end' </code> <code> 'top-start-corner' </code> <code> 'top-end-corner' </code>\n   * <code> 'end' </code> <code> 'end-top'  </code> <code> 'end-bottom' </code> <code> 'end-top-corner' </code> <code> 'end-bottom-corner' </code>\n   * <code> 'bottom'  </code> <code> 'bottom-start'  </code> <code> 'bottom-end' </code> <code> 'bottom-start-corner' </code> <code> 'bottom-end-corner' </code>\n   * <code> 'start' </code> <code> 'start-top'  </code> <code> 'start-bottom' </code> <code> 'start-top-corner' </code> <code> 'start-bottom-corner' </code>\n   * </p>\n   */\n  placement?: Placement;\n\n  /**\n   * Trigger element reference.\n   */\n  anchorRef: RefObject<Element | Coords>;\n\n  /**\n   * Placement offset.\n   * Offset displaces the floating element from its core placement along the specified axes.\n   * Offset could be a number, object or a function.\n   * A number represents the distance (gutter or margin) between the floating element and the reference element.\n   * This is shorthand for mainAxis.\n   * <pre>\n   *   {\n   *     mainAxis?: number;\n   *     crossAxis?: number;\n   *   }\n   * </pre>\n   * <p><code>mainAxis</code> represents the distance (gutter or margin) between the floating element and the reference element.</p>\n   * <p><code>crossAxis</code> represents the shifting between the floating element and the reference element.<p>\n   * You may also pass a function which returns the previously listed values — this enables you to read the dimensions of the reference or floating elements and the current placement.\n   * <pre>\n   * (args: {\n   *   floating: Rect;\n   *   reference: Rect;\n   *   placement: Placement;\n   * }) => OffsetValue\n   * </pre>\n   */\n  offsetValue?: Offset;\n\n  /**\n   * Click outside callback.\n   */\n  onClickOutside?: (event: MouseEvent) => void;\n\n  /**\n   * Specifies the flipping behavior along the respective axis.\n   * When true, the floating element will be flipped to prevent overflow.\n   * Default values are 'true' for mainAxis and 'false' for crossAxis.\n   */\n  flipOptions?: FlipOptions;\n\n  /**\n   * Specifies the shift behavior along the respective axis.\n   * When true, the floating element will shift to prevent overflow.\n   * Default values are 'true' for mainAxis and 'false' for crossAxis.\n   */\n  shiftOptions?: ShiftOptions;\n\n  /**\n   *  Triggered when placement or coordinates are changed after collision is detected\n   */\n  onPosition?: (data: PositionData) => void;\n\n  /**\n   * Tail\n   */\n  tail?: 'none' | 'simple';\n};\n\nfunction isElement(value: any): value is Element {\n  return value instanceof Element;\n}\n/**\n * A floating component allows the user to create a floating element that is displayed on the the \"top layer\" of all other elements.\n *  The Floating component is an advanced component and is used underneath Popup, Tooltip, SelectMultiple, Menu and other components.\n */\nexport const Floating = forwardRef(\n  (\n    {\n      children,\n      onClickOutside,\n      placement = 'bottom',\n      anchorRef,\n      offsetValue,\n      class: className,\n      tail = 'none',\n      flipOptions = { mainAxis: true, crossAxis: false },\n      shiftOptions = { mainAxis: true, crossAxis: false },\n      onPosition\n    }: Props,\n    ref: ForwardedRef<HTMLElement | null>\n  ) => {\n    const arrowRef = useRef<HTMLDivElement>(null);\n\n    const [previousAnchor, setPreviousAnchor] = useState<Element | Coords | null>(null);\n\n    // we need to be sure anchorRef.current exists in first call\n    // to be able to set the previousAnchor state\n    useLayoutEffect(() => {\n      setPreviousAnchor(anchorRef.current);\n    }, []);\n\n    // In case anchorRef.current changes and we need to update floating position\n    // when it changes, we need to have copy in the state.\n    // For example when anchorRef is Coords( virtual element)\n    if (anchorRef.current !== previousAnchor) {\n      setPreviousAnchor(anchorRef.current);\n    }\n\n    const { direction } = useUser();\n    const isRtl = direction === 'rtl';\n\n    const _onPosition = useCallback(\n      (data: PositionData) => {\n        renderTail(data, anchorRef, arrowRef, tail, isRtl);\n        onPosition?.(data);\n      },\n      [placement, anchorRef, arrowRef, tail, onPosition]\n    );\n\n    const { x, y, reference, floating, refs } = useFloating({\n      placement: placement,\n      middleware: [\n        offset(offsetValue),\n        flip({\n          mainAxis: flipOptions.mainAxis,\n          crossAxis: flipOptions.crossAxis\n        }),\n        shift({\n          mainAxis: shiftOptions.mainAxis,\n          crossAxis: shiftOptions.crossAxis,\n          limiter: limitShift({\n            mainAxis: shiftOptions.mainAxis,\n            crossAxis: shiftOptions.crossAxis\n          })\n        }),\n        ...(arrowRef.current\n          ? [\n              arrow({\n                element: arrowRef.current\n              })\n            ]\n          : [])\n      ],\n      whileElementsMounted: autoUpdate,\n      onPosition: _onPosition\n    });\n\n    useOutsideClick({ isDisabled: false, ref: refs.floating, handler: onClickOutside });\n\n    useLayoutEffect(() => {\n      if (isElement(previousAnchor)) {\n        const element = previousAnchor as Element;\n        reference(element);\n        return;\n      }\n      const coords = previousAnchor as Coords;\n      const virtualEl: VirtualElement = {\n        getBoundingClientRect() {\n          return {\n            width: 0,\n            height: 0,\n            x: coords!.x,\n            y: coords!.y,\n            top: coords!.y,\n            left: coords!.x,\n            right: coords!.x,\n            bottom: coords!.y\n          };\n        }\n      };\n      if (coords && coords.x != null) {\n        reference(virtualEl);\n      }\n    }, [previousAnchor, reference]);\n\n    const stableRef = useMemo(() => mergeRefs(ref, floating), [ref, floating]);\n    const content = (\n      <div\n        class={className}\n        ref={stableRef}\n        style={{\n          display: 'block',\n          visibility: x == null && y == null ? 'hidden' : 'visible',\n          position: 'absolute',\n          top: y ?? '',\n          left: x ?? ''\n        }}>\n        {children}\n        <FloatingTail ref={arrowRef} />\n      </div>\n    );\n    return content;\n  }\n);\n\nexport { Offset, Placement, Coords, Rect, FlipOptions, ShiftOptions, PositionData };\n"],"names":["FloatingTail","forwardRef","arrowRef","_jsxs","ref","children","_jsx","Floating","onClickOutside","placement","anchorRef","offsetValue","class","className","tail","flipOptions","mainAxis","crossAxis","shiftOptions","onPosition","useRef","previousAnchor","setPreviousAnchor","useState","useLayoutEffect","current","direction","useUser","isRtl","_onPosition","useCallback","data","arrow","x","y","centerOffset","arrowEl","arrowSize","arrowSizeCorner","arrowInnerEl","_a","querySelector","arrowInnerSize","arrowInnerSizeCorner","arrowCommonStyle","position","width","height","anchorRefHeight","anchorRefWidth","isAnchorRefElement","undefined","Math","round","getBoundingClientRect","_b","isCornerVerticalPlacement","abs","includes","origPlacement","isCornerHorizontalPlacement","isCenter","isCenterOffsetPositive","setArrowSizes","isCornerPlacement","arrowFinalSize","setArrowStyle","borderTop","getSize","borderRight","getTransparentBorder","borderLeft","arrowInnerFinalSize","setArrowInnerStyle","setElementStyle","style","element","Object","assign","getTurn","eighth","size","split","setArrowTop","setArrowStart","setArrowEnd","setArrowBottom","top","bottom","left","transform","setCornerArrowInner","setNonCornerArrowInner","right","renderTail","reference","floating","refs","useFloating","middleware","offset","flip","shift","limiter","limitShift","whileElementsMounted","autoUpdate","N","useOutsideClick","isDisabled","handler","Element","coords","virtualEl","stableRef","useMemo","mergeRefs","display","visibility"],"mappings":"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"}