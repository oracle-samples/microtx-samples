{"version":3,"file":"stringUtils-7012261b.js","sources":["../../src/utils/UNSAFE_stringUtils/stringUtils.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2004 %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\n/**\n * String utilities.\n */\n\nconst _TRIM_ALL_RE = /^\\s*|\\s*$/g;\n\n/**\n * Returns true if the value is null or if the trimmed value is of zero length.\n *\n * @param {Object|string|null} value\n * @returns true if the string or Object (e.g., Array) is of zero length.\n */\nexport function isEmpty(value: object | string | null) {\n  if (value === null) {\n    return true;\n  }\n\n  const trimValue = trim(value);\n\n  if (trimValue?.hasOwnProperty('length')) {\n    return (trimValue as any).length === 0;\n  }\n\n  return true;\n}\n\n/**\n * Returns true if the value is null, undefined or if the trimmed value is of zero length.\n *\n * @param {Object|string|null=} value\n * @returns true if the string or Object (e.g., Array) is of zero length.\n */\nexport function isEmptyOrUndefined(value?: object | string | null) {\n  if (value === undefined || isEmpty(value)) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Test if an object is a string (either a string constant or a string object)\n * @param {Object|string|null} obj object to test\n * @return true if a string constant or string object\n */\nexport function isString(obj: object | string | null) {\n  return obj !== null && (typeof obj === 'string' || obj instanceof String);\n}\n\n/**\n * Remove leading and trailing whitespace\n * @param {Object|string|null} data to trim\n * @returns trimmed input\n */\nexport function trim(data: object | string | null) {\n  if (isString(data)) {\n    return (data as string).replace(_TRIM_ALL_RE, '');\n  }\n\n  return data;\n}\n\n/**\n * Port of the Java String.hashCode method.\n * http://erlycoder.com/49/javascript-hash-functions-to-convert-string-into-integer-hash-\n *\n * @param {string} str\n * @returns The hashCode of the string\n */\nexport function hashCode(str: string) {\n  let hash = 0;\n  if (str.length === 0) {\n    return hash;\n  }\n\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    // eslint-disable-next-line no-bitwise\n    hash = (hash << 5) - hash + c;\n    // eslint-disable-next-line no-bitwise\n    hash &= hash;\n  }\n  return hash;\n}\n"],"names":["_TRIM_ALL_RE","isEmpty","value","trimValue","trim","hasOwnProperty","length","isString","obj","String","data","replace","str","hash","i","charCodeAt","undefined"],"mappings":"4CAYA,MAAMA,EAAe,aAQf,SAAUC,EAAQC,GACtB,GAAc,OAAVA,EACF,OAAO,EAGT,MAAMC,EAAYC,EAAKF,GAEvB,QAAIC,MAAAA,OAAA,EAAAA,EAAWE,eAAe,YACS,IAA7BF,EAAkBG,OAyBxB,SAAUC,EAASC,GACvB,OAAe,OAARA,IAAgC,iBAARA,GAAoBA,aAAeC,QAQ9D,SAAUL,EAAKM,GACnB,OAAIH,EAASG,GACHA,EAAgBC,QAAQX,EAAc,IAGzCU,aAUH,SAAmBE,GACvB,IAAIC,EAAO,EACX,GAAmB,IAAfD,EAAIN,OACN,OAAOO,EAGT,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAIN,OAAQQ,IAAK,CAGnCD,GAAQA,GAAQ,GAAKA,EAFXD,EAAIG,WAAWD,GAIzBD,GAAQA,EAEV,OAAOA,oCAlDH,SAA6BX,GACjC,aAAcc,IAAVd,IAAuBD,EAAQC"}