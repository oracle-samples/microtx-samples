{"version":3,"file":"menuTestsUtils-c8ff40bb.js","sources":["../../src/UNSAFE_Menu/__tests__/menuTestsUtils.ts"],"sourcesContent":["import { RenderResult, ByRoleMatcher } from '@testing-library/preact';\n\nexport function getIcon(menuItem: HTMLElement, selector: string) {\n  return menuItem.querySelector(selector);\n}\n\nexport function getAllMenuItemsByRole(content: RenderResult, role: ByRoleMatcher, hidden = true) {\n  return content.getAllByRole(role, { hidden });\n}\n\nexport function getMenuItemByRole(content: RenderResult, role: ByRoleMatcher, hidden = true) {\n  return content.getByRole(role, { hidden });\n}\n\nexport function getLabel(content: RenderResult, label: string) {\n  return content.getByText(label);\n}\n\nexport function setObserverConfig() {\n  if (!window.ResizeObserver) {\n    // ResizeObserver isn't available in test environment\n    const MockResizeObserver = jest.fn();\n    MockResizeObserver.mockReturnValue({\n      observe: () => null,\n      unobserve: () => null,\n      disconnect: () => null\n    });\n\n    Object.defineProperty(global, 'ResizeObserver', {\n      writable: true,\n      configurable: true,\n      value: MockResizeObserver\n    });\n  }\n}\n"],"names":["content","role","hidden","getAllByRole","menuItem","selector","querySelector","label","getByText","getByRole","window","ResizeObserver","MockResizeObserver","jest","fn","mockReturnValue","observe","unobserve","disconnect","Object","defineProperty","global","writable","configurable","value"],"mappings":"oEAMM,SAAgCA,EAAuBC,EAAqBC,GAAS,GACzF,OAAOF,EAAQG,aAAaF,EAAM,CAAEC,OAAAA,eALtB,SAAQE,EAAuBC,GAC7C,OAAOD,EAASE,cAAcD,eAWhB,SAASL,EAAuBO,GAC9C,OAAOP,EAAQQ,UAAUD,wBALrB,SAA4BP,EAAuBC,EAAqBC,GAAS,GACrF,OAAOF,EAAQS,UAAUR,EAAM,CAAEC,OAAAA,oCAQjC,IAAKQ,OAAOC,eAAgB,CAE1B,MAAMC,EAAqBC,KAAKC,KAChCF,EAAmBG,gBAAgB,CACjCC,QAAS,IAAM,KACfC,UAAW,IAAM,KACjBC,WAAY,IAAM,OAGpBC,OAAOC,eAAeC,OAAQ,iBAAkB,CAC9CC,UAAU,EACVC,cAAc,EACdC,MAAOZ"}