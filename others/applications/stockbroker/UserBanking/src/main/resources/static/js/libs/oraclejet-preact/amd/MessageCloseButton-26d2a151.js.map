{"version":3,"file":"MessageCloseButton-26d2a151.js","sources":["../../src/PRIVATE_Message/MessageCloseButton.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { VNode } from 'preact';\nimport { Button } from '../UNSAFE_Button';\nimport { CloseIcon } from '../UNSAFE_ThemedIcons';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { MessageVariant } from './Message.types';\n\n// TODO: remove usages of margin here\nconst messageCloseButtonStyles = {\n  base: cssProps`${{\n    alignSelf: 'flex-start',\n    display: 'flex'\n  }}`,\n  banner: cssProps`${{\n    marginInlineStart: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-1x)',\n    marginInlineEnd: 'calc(-1 * var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-2x))',\n    marginTop: 'calc(-1 * var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-2x))',\n    marginBottom: 'calc(-1 * var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-2x))'\n  }}`,\n  inline: undefined,\n  toast: cssProps`${{\n    marginInlineStart: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-4x)',\n    marginInlineEnd: 'calc(-1 * var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-3x) / 2)',\n    marginTop: 'calc(-1 * var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-3x) / 2)',\n    marginBottom: 'calc(-1 * var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-3x) / 2)'\n  }}`\n};\n\n/**\n * Props for the MessageCloseButton component\n */\ntype Props = {\n  /**\n   * The callback function to be called when the close icon is clicked\n   */\n  onAction: (event?: Event) => void;\n\n  /**\n   * Button renderer\n   */\n  buttonRenderer?: (\n    title: string,\n    onAction: (event?: Event) => void,\n    variant?: MessageVariant\n  ) => VNode;\n\n  /**\n   * Style variant\n   */\n  variant?: MessageVariant;\n\n  /**\n   * Close button title\n   */\n  title?: string;\n};\n\n/**\n * A Component for rendering the message close button\n */\nfunction MessageCloseButton({\n  onAction,\n  buttonRenderer,\n  title = 'Close',\n  variant = 'banner'\n}: Props) {\n  const renderedButton = buttonRenderer ? (\n    buttonRenderer(title, onAction, variant)\n  ) : (\n    <Button\n      startIcon={<CloseIcon />}\n      size=\"sm\"\n      title={title}\n      variant=\"borderless\"\n      onAction={onAction}\n    />\n  );\n  // TODO: JET-48715 - remove marker classes\n  // Right now, oj-message-banner component uses this for unit tests and has no alternate way for\n  // testing. This will need to be removed as we work on oj-c-message-banner.\n  const markerClassForTests = 'oj-c-messagebanner-close-icon';\n  const classes = classNames([\n    variant === 'banner' && markerClassForTests,\n    messageCloseButtonStyles.base,\n    messageCloseButtonStyles[variant]\n  ]);\n\n  // Otherwise, render the close icon\n  return <div class={classes}>{renderedButton}</div>;\n}\n\nexport { MessageCloseButton };\n"],"names":["messageCloseButtonStyles","inline","undefined","onAction","buttonRenderer","title","variant","base","_jsx","Object","assign","class","classes","children","renderedButton"],"mappings":"2NAgBA,MAAAA,EAAA,MAAA,kBAAA,UAWEC,YAAAC,wCAyCF,UAAAC,SAAAA,EAAAC,eAAAA,EAAAC,MAAAA,EAAA,QAAAC,QAAAA,EAAA,kMAuBIN,EAAAO,YAKF,OAAAC,MAAA,MAAAC,OAAAC,OAAA,CAAAC,MAAAC,GAAA,CAAAC,SAAAC"}