{"version":3,"file":"MessageLayer-4b1a5953.js","sources":["../../src/PRIVATE_MessageLayer/MessageLayer.tsx"],"sourcesContent":["import { ComponentChildren } from 'preact';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\n\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { stringLiteralArray } from '../utils/UNSAFE_arrayUtils';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { Flex } from '../UNSAFE_Flex';\nimport { WindowOverlay } from '../UNSAFE_WindowOverlay';\n\nconst positions = stringLiteralArray([\n  'top',\n  'top-left',\n  'top-right',\n  'top-start',\n  'top-end',\n  'bottom',\n  'bottom-left',\n  'bottom-right',\n  'bottom-start',\n  'bottom-end'\n]);\n\ntype Position = typeof positions[number];\n\ntype Offset =\n  | number\n  | {\n      horizontal?: number;\n      vertical?: number;\n    };\n\ntype Props = {\n  children: ComponentChildren;\n\n  /**\n   * Defines the fixed position where the notifications will to be placed on the screen.\n   * - top-start resolves to top-left in LTR (top-right in RTL)\n   * - top-end resolves to top-right in LTR (top-left in RTL)\n   * - bottom-start resolves to bottom-left in LTR (bottom-right in RTL)\n   * - bottom-end resolves to bottom-right in LTR (bottom-left in RTL)\n   *\n   * default bottom\n   */\n  position?: Position;\n\n  /**\n   * Defines an offset (in pixels) in the placement. Value can be supplied as a number or\n   * an object with horizontal and vertical values.\n   *\n   * default 0\n   */\n  offset?: Offset;\n\n  /**\n   * The test id which is assigned to the \"data-testid\" for the component's element.\n   * Used for test automation, it is assigned to the wrapper element rendered by the component.\n   */\n  testId?: string;\n};\n\nconst styles = {\n  notificationPosition: cssProps`${{\n    position: 'absolute',\n    pointerEvents: 'initial',\n    width: 'max-content'\n  }}`,\n  ['top-left']: cssProps`${{\n    left: 'var(--oj-c-PRIVATE-DO-NOT-USE-notification-horizontal-offset)',\n    top: 'var(--oj-c-PRIVATE-DO-NOT-USE-notification-vertical-offset)'\n  }}`,\n  top: cssProps`${{\n    left: 'calc(50% + var(--oj-c-PRIVATE-DO-NOT-USE-notification-horizontal-offset))',\n    top: 'var(--oj-c-PRIVATE-DO-NOT-USE-notification-vertical-offset)',\n    transform: 'translateX(-50%)'\n  }}`,\n  ['top-right']: cssProps`${{\n    right: 'var(--oj-c-PRIVATE-DO-NOT-USE-notification-horizontal-offset)',\n    top: 'var(--oj-c-PRIVATE-DO-NOT-USE-notification-vertical-offset)'\n  }}`,\n  ['bottom-left']: cssProps`${{\n    left: 'var(--oj-c-PRIVATE-DO-NOT-USE-notification-horizontal-offset)',\n    bottom: 'var(--oj-c-PRIVATE-DO-NOT-USE-notification-vertical-offset)'\n  }}`,\n  bottom: cssProps`${{\n    left: 'calc(50% + var(--oj-c-PRIVATE-DO-NOT-USE-notification-horizontal-offset))',\n    bottom: 'var(--oj-c-PRIVATE-DO-NOT-USE-notification-vertical-offset)',\n    transform: 'translateX(-50%)'\n  }}`,\n  ['bottom-right']: cssProps`${{\n    right: 'var(--oj-c-PRIVATE-DO-NOT-USE-notification-horizontal-offset)',\n    bottom: 'var(--oj-c-PRIVATE-DO-NOT-USE-notification-vertical-offset)'\n  }}`\n} as const;\n\nconst MessageLayer = ({ children, offset, testId, position = 'bottom' }: Props) => {\n  const { direction } = useUser();\n  const isLtr = direction === 'ltr';\n\n  let logicalPosition;\n  switch (position) {\n    case 'top-start':\n      logicalPosition = isLtr ? styles['top-left'] : styles['top-right'];\n      break;\n    case 'top-end':\n      logicalPosition = isLtr ? styles['top-right'] : styles['top-left'];\n      break;\n    case 'bottom-start':\n      logicalPosition = isLtr ? styles['bottom-left'] : styles['bottom-right'];\n      break;\n    case 'bottom-end':\n      logicalPosition = isLtr ? styles['bottom-right'] : styles['bottom-left'];\n      break;\n    default:\n      logicalPosition = styles[position];\n      break;\n  }\n\n  const positionClasses = classNames([styles.notificationPosition, logicalPosition]);\n\n  const offsetStyle =\n    typeof offset === 'number'\n      ? {\n          '--oj-c-PRIVATE-DO-NOT-USE-notification-vertical-offset': `${offset}px`,\n          '--oj-c-PRIVATE-DO-NOT-USE-notification-horizontal-offset': `${offset}px`\n        }\n      : {\n          '--oj-c-PRIVATE-DO-NOT-USE-notification-vertical-offset': `${offset?.vertical ?? 0}px`,\n          '--oj-c-PRIVATE-DO-NOT-USE-notification-horizontal-offset': `${offset?.horizontal ?? 0}px`\n        };\n\n  return (\n    <WindowOverlay>\n      <div\n        class={positionClasses}\n        data-testid={testId}\n        style={offset !== undefined ? offsetStyle : undefined}>\n        <Flex direction=\"column\" gap=\"2x\">\n          {children}\n        </Flex>\n      </div>\n    </WindowOverlay>\n  );\n};\n\nexport type { Position, Offset };\nexport { MessageLayer, positions };\n"],"names":["positions","stringLiteralArray","styles","children","offset","testId","position","direction","useUser","isLtr","logicalPosition","positionClasses","classNames","notificationPosition","offsetStyle","_a","vertical","_b","horizontal","_jsx","WindowOverlay","jsx","Object","assign","class","style","undefined","Flex","gap"],"mappings":"iQASAA,MAAAA,EAAAC,EAAAA,mBAAA,wHAmDAC,EAAA,sBAAA,WAME,WANF,eAAA,UAeE,YAfF,WAmBE,cAnBF,gBAAA,WA4BE,eAAA,2BAMF,EAAAC,SAAAA,EAAAC,OAAAA,EAAAC,OAAAA,EAAAC,SAAAA,EAAA,qBACE,MAAAC,UAAAA,GAAAC,EAAAA,UACAC,EAAA,QAAAF,EAEA,IAAAG,EACA,OAAAJ,GACE,IAAA,YACEI,EAAAD,EAAAP,EAAA,YAAAA,EAAA,mBAEF,IAAA,UACEQ,EAAAD,EAAAP,EAAA,aAAAA,EAAA,kBAEF,IAAA,eACEQ,EAAAD,EAAAP,EAAA,eAAAA,EAAA,sBAEF,IAAA,aACEQ,EAAAD,EAAAP,EAAA,gBAAAA,EAAA,qBAEF,QACEQ,EAAAR,EAAAI,GAIJ,MAAAK,EAAAC,EAAAA,WAAA,CAAAV,EAAAW,qBAAAH,IAEAI,EAAA,iBAAAV,EAEI,wIAIA,CACI,yDAAA,GAAA,QAAAW,EAAAX,MAAAA,OAAA,EAAAA,EAAAY,gBAAA,IAAAD,EAAAA,EAAA,MACA,2DAAA,GAAA,QAAAE,EAAAb,MAAAA,OAAA,EAAAA,EAAAc,kBAAA,IAAAD,EAAAA,EAAA,OAGR,OAAAE,EAAAA,IAAAC,EAAAA,cAAA,CAAAjB,SAAAgB,EAAAE,IAAA,MAAAC,OAAAC,OAAA,CAAAC,MAAAb,EAAA,cAAAN,EAAAoB,WAAAC,IAAAtB,EAAAU,OAAAY,GAAA,CAAAvB,SAAAgB,EAAAE,IAAAM,OAAAL,OAAAC,OAAA,CAAAhB,UAAA,SAAAqB,IAAA,MAAA,CAAAzB,SAAAA"}