{"version":3,"file":"UNSAFE_logger.js","sources":["../../../src/utils/UNSAFE_logger/logger.ts","../../../../node_modules/ramda/src/pick.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2011 %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport pick from 'ramda/src/pick';\n\n// TODO: fully implement Logger\nexport const Logger = pick(['error', 'warn', 'info', 'log'], console);\n","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\n\n\nvar pick =\n/*#__PURE__*/\n_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = pick;"],"names":["Logger","_curry2","require$$0","names","obj","result","idx","length","pick","console"],"mappings":"4FAUa,MAAAA,GCebC,EAvBAC,EAAAA,WAuBQ,SAAcC,EAAOC,GAI3B,IAHA,IAAIC,EAAS,GACTC,EAAM,EAEHA,EAAMH,EAAMI,QACbJ,EAAMG,KAAQF,IAChBC,EAAOF,EAAMG,IAAQF,EAAID,EAAMG,KAGjCA,GAAO,EAGT,OAAOD,GD3BaG,CAAK,CAAC,QAAS,OAAQ,OAAQ,OAAQC"}